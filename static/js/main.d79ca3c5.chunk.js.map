{"version":3,"sources":["components/Header/style.module.css","components/Directory/style.module.css","components/Header/index.js","components/Directory/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","Jumbotron","className","style","Container","Directory","employees","Table","striped","bordered","hover","map","employee","src","picture","large","alt","name","first","last","phone","href","email","dateFormat","dob","date","login","uuid","App","state","sort","getEmployees","fetch","then","results","json","data","console","log","setState","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,uB,iNCgBXC,MAbf,WACI,OACI,cAACC,EAAA,EAAD,CAAWC,UAAWC,IAAMF,UAA5B,SACI,eAACG,EAAA,EAAD,WACI,oDACA,uJ,0CC+BDC,MAnCf,YAAmC,IAAdC,EAAa,EAAbA,UAEjB,OACI,cAACF,EAAA,EAAD,UACI,eAACG,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACR,UAAWC,IAAMI,MAA/C,UACI,gCACI,+BACI,uCACA,sCACA,uCACA,uCACA,+CAGR,gCAEQD,EAAUK,KAAI,SAACC,GACX,OAEI,+BACI,6BAAI,qBAAKC,IAAKD,EAASE,QAAQC,MAAOC,IAAKJ,EAASK,KAAKC,MAAQ,IAAMN,EAASK,KAAKE,SACrF,6BAAKP,EAASK,KAAKC,MAAQ,IAAMN,EAASK,KAAKE,OAC/C,6BAAKP,EAASQ,QACd,6BAAI,mBAAGC,KAAM,UAAYT,EAASU,MAA9B,SAAsCV,EAASU,UACnD,6BAAKC,IAAWX,EAASY,IAAIC,KAAM,uBAL9Bb,EAASc,MAAMC,iBCazCC,E,4MA9BbC,MAAQ,CACNvB,UAAW,GACXwB,KAAM,a,EAGRC,aAAe,WAEbC,MADY,gDAETC,MAAK,SAACC,GAAD,OAAaA,EAAQC,UAC1BF,MAAK,SAACG,GACLC,QAAQC,IAAI,WAAYF,GAExB,EAAKG,SAAS,CAAEjC,UAAW8B,EAAKF,c,kEAKpCM,KAAKT,iB,+BAIL,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWzB,UAAWkC,KAAKX,MAAMvB,mB,GA1BvBmC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d79ca3c5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Jumbotron\":\"style_Jumbotron__7v6LN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"style_Table__i0Tsm\"};","import React from 'react';\nimport { Container, Jumbotron } from 'react-bootstrap';\nimport style from './style.module.css';\n\nfunction Header() {\n    return (\n        <Jumbotron className={style.Jumbotron}>\n            <Container>\n                <h1>Employee Directory</h1>\n                <p>\n                    Click on column headings to sort the directory by selected column, or use the search box to filter your results.\n            </p>\n            </Container>\n        </Jumbotron>\n    );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Container, Table } from 'react-bootstrap';\nimport dateFormat from 'dateformat';\nimport style from './style.module.css';\n\nfunction Directory({ employees }) {\n\n    return (\n        <Container>\n            <Table striped bordered hover className={style.Table}>\n                <thead>\n                    <tr>\n                        <th>Image</th>\n                        <th>Name</th>\n                        <th>Phone</th>\n                        <th>Email</th>\n                        <th>Birthday</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {\n                        employees.map((employee) => {\n                            return (\n\n                                <tr key={employee.login.uuid}>\n                                    <td><img src={employee.picture.large} alt={employee.name.first + \" \" + employee.name.last} /></td>\n                                    <td>{employee.name.first + \" \" + employee.name.last}</td>\n                                    <td>{employee.phone}</td>\n                                    <td><a href={\"mailto:\" + employee.email}>{employee.email}</a></td>\n                                    <td>{dateFormat(employee.dob.date, \"paddedShortDate\")}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                </tbody>\n            </Table>\n        </Container>\n    )\n}\n\nexport default Directory;","import React, { Component } from \"react\";\nimport './App.css';\nimport Header from './components/Header';\nimport Directory from './components/Directory';\n\nclass App extends Component {\n\n  state = {\n    employees: [],\n    sort: \"ascending\"\n  };\n\n  getEmployees = () => {\n    const url = \"https://randomuser.me/api/?results=50&nat=us\"\n    fetch(url)\n      .then((results) => results.json())\n      .then((data) => {\n        console.log('data >> ', data)\n\n        this.setState({ employees: data.results })\n      })\n  }\n\n  componentDidMount() {\n    this.getEmployees();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Directory employees={this.state.employees} />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}